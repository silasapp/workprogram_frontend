export interface IDrillEachCost {
  id: number;
  companY_ID: string;
  companyName: string;
  companyNumber: number;
  companyemail: string;
  consession_Type: string;
  created_by: string;
  date_Created: string;
  date_Updated: string;
  field_ID: number;
  omL_ID: string;
  omL_Name: string;
  quater: string;
  surface_cordinates_for_each_well_in_degrees: string;
  updated_by: string;
  well_cost: string;
  well_name: string;
  year_of_WP: string;
}

export interface IDrillEachCostProposed {
  id: number;
  companY_ID: string;
  companyName: string;
  companyNumber: number;
  companyemail: string;
  consession_Type: string;
  created_by: string;
  date_Created: string;
  date_Updated: string;
  field_ID: string;
  omL_ID: string;
  omL_Name: string;
  quater: string;
  surface_cordinates_for_each_well_in_degrees: string;
  updated_by: string;
  well_cost: string;
  well_name: string;
  year_of_WP: string;
}

export interface IDrillOperationCategoriesWell {
  actual_No_Drilled_in_Current_Year: string;
  actual_Proposed: string;
  actual_wells_name: string;
  actual_year: string;
  any_New_Discoveries: string;
  basin: string;
  category: string;
  comments: string;
  companY_ID: string;
  companyName: string;
  companyNumber: number;
  companyemail: string;
  consession_Type: string;
  contract_Type: string;
  core_Cost_USD: string;
  core_Depth_Interval: string;
  cored: string;
  created_by: string;
  date_Created: string;
  date_Updated: string;
  depth_refrence: string;
  fieldDiscoveryUploadFilePath: string;
  field_ID: string;
  hydrocarbonCountUploadFilePath: string;
  hydrocarbon_Counts: string;
  id: number;
  location_name: string;
  measured_depth: string;
  no_of_wells_cored: number;
  number_of_Days_to_Total_Depth: string;
  omL_ID: string;
  omL_Name: string;
  processing_Fees_Paid: string;
  propose_well_names: string;
  proposed_No_Drilled: string;
  proposed_cost_per_well: string;
  proposed_year: string;
  quater: string;
  rig_Name: string;
  rig_type: string;
  spud_date: string;
  state_the_field_where_Discovery_was_made: string;
  surface_cordinates_for_each_well_in_degrees: string;
  target_reservoir: string;
  terrain: string;
  terrain_Drill: string;
  true_vertical_depth: string;
  updated_by: string;
  water_depth: string;
  wellName: string;
  well_Status_and_Depth: string;
  well_cost: string;
  well_name: string;
  well_trajectory: string;
  well_type: string;
  year_of_WP: string;
}

export interface IGeoActivitiesAcquisition {
  id: number;
  actual_year: string;
  actual_year_aquired_data: string;
  budeget_Allocation: string;
  budeget_Allocation_NGN: string;
  budeget_Allocation_USD: string;
  companY_ID: string;
  companyName: string;
  companyNumber: number;
  companyemail: string;
  consession_Type: string;
  contract_Type: string;
  created_by: string;
  date_Created: string;
  date_Updated: string;
  field_ID: string;
  gas_Sales_Royalty_Payment: string;
  gas_flare_Royalty_payment: string;
  geo_Activity_Timeline: string;
  geo_Completion_Status: string;
  geo_Record_Length_of_Data: string;
  geo_acquired_geophysical_data: string;
  geo_area_of_coverage: string;
  geo_method_of_acquisition: string;
  geo_type_of_data_acquired: string;
  geophysical_ActivitiesId: number;
  name_of_Contractor: string;
  no_of_Folds: string;
  omL_ID: string;
  omL_Name: string;
  proposed_year: string;
  proposed_year_data: string;
  quantum: string;
  quantum_Approved: string;
  quantum_Planned: string;
  quantum_carry_forward: string;
  quater: string;
  remarks: string;
  terrain: string;
  updated_by: string;
  year_of_WP: string;
}

export interface IGeoActivitiesProcessing {
  id: number;
  actual_year: string;
  actual_year_aquired_data: string;
  budeget_Allocation: string;
  budeget_Allocation_NGN: string;
  budeget_Allocation_USD: string;
  companY_ID: string;
  companyName: string;
  companyNumber: number;
  companyemail: string;
  consession_Type: string;
  contract_Type: string;
  created_by: string;
  date_Created: string;
  date_Updated: string;
  field_ID: string;
  geo_Activity_Timeline: string;
  geo_Any_Ongoing_Processing_Project: string;
  geo_Completion_Status: string;
  geo_Quantum_of_Data: string;
  geo_Quantum_of_Data_carry_over: string;
  geo_Type_of_Data_being_Processed: string;
  geophysical_Activities_ProcessingId: number;
  interpreted_Actual: string;
  interpreted_Proposed: string;
  name_of_Contractor: string;
  no_of_Folds: string;
  omL_ID: string;
  omL_Name: string;
  processed_Actual: string;
  processed_Proposed: string;
  proposed_year: string;
  proposed_year_data: string;
  quantum_Approved: string;
  quantum_Planned: string;
  quater: string;
  remarks: string;
  reprocessed_Actual: string;
  reprocessed_Proposed: string;
  terrain: string;
  updated_by: string;
  year_of_WP: string;
}

export interface IHseAccidentIncidences {
  id: number;
  actuaL_year: string;
  companY_ID: string;
  companyName: string;
  companyNumber: number;
  companyemail: string;
  consession_Type: string;
  contract_Type: string;
  created_by: string;
  date_Created: string;
  date_Updated: string;
  field_ID: string;
  if_YES_were_they_reported: string;
  omL_ID: string;
  omL_Name: string;
  proposeD_year: string;
  terrain: string;
  updated_by: string;
  uploadIncidentStatisticsFilename: string;
  uploadIncidentStatisticsPath: string;
  was_there_any_accident_incidence: string;
  year_of_WP: string;
}

export interface IHseAccidentIncidenceType {
  id: number;
  actuaL_year: string;
  cause: string;
  companY_ID: string;
  companyName: string;
  companyNumber: string;
  companyemail: string;
  consequence: string;
  consession_Type: string;
  contract_Type: string;
  created_by: string;
  date_: string;
  date_Created: string;
  date_Updated: string;
  field_ID: string;
  frequency: string;
  investigation: string;
  lesson_Learnt: string;
  location: string;
  omL_ID: string;
  omL_Name: string;
  proposeD_year: string;
  terrain: string;
  type_of_Accident_Incidence: string;
  updated_by: string;
  year_of_WP: string;
}

export interface IHseAccidentModel {
  id: number;
  cause: string;
  consequence: string;
  date_: string;
  frequency: string;
  if_YES_were_they_reported: string;
  investigation: string;
  lesson_Learnt: string;
  location: string;
  type_of_Accident_Incidence: string;
  was_there_any_accident_incidence: string;
}

export interface IHseAssetRegister {
  companY_ID: string;
  companyName: string;
  companyNumber: number;
  companyemail: string;
  condition_of_Equipment: string;
  consession_Type: string;
  contract_Type: string;
  created_by: string;
  date_Created: string;
  date_Updated: string;
  equipment_Inspected_as_and_when_due: string;
  equipment_Installation_date: string;
  equipment_description: string;
  equipment_manufacturer: string;
  equipment_serial_number: string;
  equipment_tag_number: string;
  equipment_type: string;
  facility: string;
  field_ID: string;
  function_Test_Result: string;
  id: number;
  inspection_Report_Review: string;
  last_Inspection_Type_Performed: string;
  last_inspection_date: string;
  next_Inspection_Date: string;
  omL_ID: string;
  omL_Name: string;
  proposed_Inspection_Type: string;
  state_reason: string;
  terrain: string;
  updated_by: string;
  year_of_WP: string;
}

export interface ILegalArbitration {
  id: number;
  anyLitigation: string;
  any_orders_made_so_far_by_the_court: string;
  case_Number: string;
  companY_ID: string;
  companyName: string;
  companyNumber: number;
  companyemail: string;
  consession_Type: string;
  contract_Type: string;
  created_by: string;
  date_Created: string;
  date_Updated: string;
  field_ID: string;
  jurisdiction: string;
  name_of_Court: string;
  names_of_Parties: string;
  omL_ID: string;
  omL_Name: string;
  potential_outcome: string;
  summary_of_the_case: string;
  terrain: string;
  updated_by: string;
  year_of_WP: string;
}

export interface ILegalLitigation {
  id: number;
  anyLitigation: string;
  any_orders_made_so_far_by_the_court: string;
  case_Number: string;
  companY_ID: string;
  companyName: string;
  companyNumber: number;
  companyemail: string;
  consession_Type: string;
  contract_Type: string;
  created_by: string;
  date_Created: string;
  date_Updated: string;
  field_ID: string;
  jurisdiction: string;
  name_of_Court: string;
  names_of_Parties: string;
  omL_ID: string;
  omL_Name: string;
  potential_outcome: string;
  summary_of_the_case: string;
  terrain: string;
  updated_by: string;
  year_of_WP: string;
}

export interface IHseAssetRegisterRBI {
  id: number;
  companY_ID: string;
  companyName: string;
  companyNumber: number;
  companyemail: string;
  condition_of_Equipment: string;
  consequence_of_Failure: string;
  consession_Type: string;
  contract_Type: string;
  created_by: string;
  date_Created: string;
  date_Updated: string;
  equipment_Inspected_as_and_when_due: string;
  equipment_Installation_date: string;
  equipment_description: string;
  equipment_manufacturer: string;
  equipment_serial_number: string;
  equipment_tag_number: string;
  equipment_type: string;
  facility: string;
  field_ID: string;
  function_Test_Result: string;
  inspection_Report_Review: string;
  last_Inspection_Type_Performed: string;
  last_inspection_date: string;
  likelihood_of_Failure: string;
  maximum_Inspection_Interval: string;
  next_Inspection_Date: string;
  omL_ID: string;
  omL_Name: string;
  proposed_Inspection_Type: string;
  rbI_Assessment_Date: string;
  state_reason: string;
  terrain: string;
  updated_by: string;
  year_of_WP: string;
}

export interface IClimateChange {
  id: number;
  oML_id: number;
  oML_Name: string;
  year_of_WP: string;
  doyouhaveGHG: string;
  gHGFilePath: string;
  ghgFilename: string;
  consession_Type: string;
  terrain: string;
  contract_Type: string;
}
